// <auto-generated />
using System;
using ConsoleDBModule;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleDBModule.Migrations
{
    [DbContext(typeof(ConsoleDBModuleContext))]
    [Migration("20230420151009_Seed")]
    partial class Seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsoleDBModule.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ArtistId");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfDeath")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artist", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1970, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstagramUrl = "https://www.instagram.com/aerosmith/",
                            Name = "Aerosmith"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1974, 11, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstagramUrl = "https://www.instagram.com/andrudonalds/",
                            Name = "Andru Donalds"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1994, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstagramUrl = "https://www.instagram.com/muse/",
                            Name = "Muse"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1982, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstagramUrl = "https://www.instagram.com/adamlambert/",
                            Name = "Adam Lambert"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1979, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstagramUrl = "https://www.instagram.com/Pink/",
                            Name = "Pink"
                        });
                });

            modelBuilder.Entity("ConsoleDBModule.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("GenreId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Rock"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Pop-Rock"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Jazz"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Funk-Rock"
                        });
                });

            modelBuilder.Entity("ConsoleDBModule.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("SongId");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<int?>("GenreId")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Song", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = new TimeSpan(0, 4, 28, 0, 0),
                            GenreId = 1,
                            ReleasedDate = new DateTime(1973, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Dream on"
                        },
                        new
                        {
                            Id = 2,
                            Duration = new TimeSpan(0, 2, 53, 0, 0),
                            GenreId = 3,
                            ReleasedDate = new DateTime(1964, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Feeling Good"
                        },
                        new
                        {
                            Id = 3,
                            Duration = new TimeSpan(0, 3, 47, 0, 0),
                            GenreId = 2,
                            ReleasedDate = new DateTime(2009, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Whataya Want from Me"
                        },
                        new
                        {
                            Id = 4,
                            Duration = new TimeSpan(0, 5, 16, 0, 0),
                            GenreId = 1,
                            ReleasedDate = new DateTime(1994, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Crazy"
                        },
                        new
                        {
                            Id = 5,
                            Duration = new TimeSpan(0, 3, 29, 0, 0),
                            GenreId = 4,
                            ReleasedDate = new DateTime(2006, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Supermassive Black Hole"
                        });
                });

            modelBuilder.Entity("ConsoleDBModule.Models.SongArtist", b =>
                {
                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("SongId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("SongArtists");

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            ArtistId = 1
                        },
                        new
                        {
                            SongId = 1,
                            ArtistId = 2
                        },
                        new
                        {
                            SongId = 2,
                            ArtistId = 3
                        },
                        new
                        {
                            SongId = 2,
                            ArtistId = 4
                        },
                        new
                        {
                            SongId = 3,
                            ArtistId = 4
                        },
                        new
                        {
                            SongId = 3,
                            ArtistId = 5
                        },
                        new
                        {
                            SongId = 4,
                            ArtistId = 1
                        },
                        new
                        {
                            SongId = 5,
                            ArtistId = 3
                        });
                });

            modelBuilder.Entity("ConsoleDBModule.Models.Song", b =>
                {
                    b.HasOne("ConsoleDBModule.Models.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("ConsoleDBModule.Models.SongArtist", b =>
                {
                    b.HasOne("ConsoleDBModule.Models.Artist", "Artists")
                        .WithMany("SongArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleDBModule.Models.Song", "Songs")
                        .WithMany("SongArtists")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artists");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("ConsoleDBModule.Models.Artist", b =>
                {
                    b.Navigation("SongArtists");
                });

            modelBuilder.Entity("ConsoleDBModule.Models.Genre", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("ConsoleDBModule.Models.Song", b =>
                {
                    b.Navigation("SongArtists");
                });
#pragma warning restore 612, 618
        }
    }
}
